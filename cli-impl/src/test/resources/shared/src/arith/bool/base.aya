open inductive Bool | true | false

def not Bool : Bool
| true => false
| false => true

variable A : Type

def if-then-else (b : Bool) (t e : A) : A elim b
| true => t
| false => e

overlap def infixl \/ (a b : Bool) : Bool
| true, b => true
| a, true => true
| false, b => b
| a, false => a
tighter /\

overlap def infixl /\ (a b : Bool) : Bool
| true, b => b
| a, true => a
| false, b => false
| a, false => false

