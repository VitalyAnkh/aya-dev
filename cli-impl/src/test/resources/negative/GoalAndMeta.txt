Unsolved:
In file $FILE:2:18 ->

  1 │   open import arith::nat::base
  2 │   def test : Nat => _
    │                     ╰╯

Error: Unsolved meta _

1 error(s), 0 warning(s).
Let's learn from that.

Goal:
In file $FILE:2:28 ->

  1 │   open import arith::nat::base
  2 │   def test (a : Nat) : Nat => {? a ?}
    │                               ╰─────╯

Goal: Goal of type
        Nat
        (Normalized: Nat)
      Context:
        a : Nat

In file $FILE:2:28 ->

  1 │   open import arith::nat::base
  2 │   def test (a : Nat) : Nat => {? a ?}
    │                               ╰─────╯

Error: Unsolved meta _

1 error(s), 0 warning(s).
Let's learn from that.

UnsolvedMetaLit:
In file $FILE:5:17 ->

  3 │   open inductive Option (A : Type)
  4 │     | some A
  5 │   def test => some 114514
    │                    ╰────╯

Error: Unsolved meta A
       in `Option ?A`
       in `Option ?A`

In file $FILE:5:17 ->

  3 │   open inductive Option (A : Type)
  4 │     | some A
  5 │   def test => some 114514
    │                    ╰────╯

Error: Unsolved meta A
       in `some 114514`

In file $FILE:5:17 ->

  3 │   open inductive Option (A : Type)
  4 │     | some A
  5 │   def test => some 114514
    │                    ╰────╯

Error: Unsolved meta A
       in `?A`
       in `114514`
       in `some 114514`

In file $FILE:5:17 ->

  3 │   open inductive Option (A : Type)
  4 │     | some A
  5 │   def test => some 114514
    │                    ╰────╯

Error: Unsolved meta A
       in `114514`
       in `some 114514`

In file $FILE:5:17 ->

  3 │   open inductive Option (A : Type)
  4 │     | some A
  5 │   def test => some 114514
    │                    ╰────╯

Error: Unable to solve the type of this literal:
         114514
       I'm confused about the following candidates:
         `Nat`, `Nat2`

5 error(s), 0 warning(s).
Let's learn from that.

Daylily:
In file $FILE:5:12 ->

  3 │       def wow {A : Type 1} {B : A -> Type} (a b : A) (x : B a) (y : B b) : Bool => true
  4 │       example def test1 (A B : Type) (x : A) (y : B) =>
  5 │         wow A B x y
    │                 ╰╯  ╰╯ ?B A B x y A >= A
    │                   ╰╯ ?B A B x y B >= B

Info: Solving equation(s) with not very general solution(s)

That looks right!

Norell:
In file $FILE:7:28 ->

  5 │   def test
  6 │    (F : Type -> Type)
  7 │    (g : ∀ (X : F _) -> F (Neg X)) : Nat => g 0
    │                               ╰╯

Error: Cannot check the expression
         X
       of type
         F (?_ F)
       against the type
         Type 0

In file $FILE:7:43 ->

  5 │   def test
  6 │    (F : Type -> Type)
  7 │    (g : ∀ (X : F _) -> F (Neg X)) : Nat => g 0
    │                                              ╰╯

Error: Cannot check the expression
         0
       of type
         Nat
       against the type
         F (?_ F)

In file $FILE:7:41 ->

  5 │   def test
  6 │    (F : Type -> Type)
  7 │    (g : ∀ (X : F _) -> F (Neg X)) : Nat => g 0
    │                                            ╰─╯

Error: Cannot check the expression
         g 0
       of type
         F (Neg <X>)
         (Normalized: F (<X> → Empty))
       against the type
         Nat

In file $FILE:7:15 ->

  5 │   def test
  6 │    (F : Type -> Type)
  7 │    (g : ∀ (X : F _) -> F (Neg X)) : Nat => g 0
    │                  ╰╯

Error: Unsolved meta _
       in `^0 (?_ ^0)`
       in `^0 (?_ ^0) → ^1 (Neg <X>)`

4 error(s), 0 warning(s).
Let's learn from that.

ScopeCheck:
In file $FILE:5:14 ->

  3 │   
  4 │   // https://cstheory.stackexchange.com/a/49160/50892
  5 │   def test (a : _) (B : Type) (b : B) (p : a = b) : I => 0
    │                 ╰╯

Error: The solution
         B
       is not well-scoped
       Only the variables below are allowed: 

In file $FILE:5:41 ->

  3 │     
  4 │     // https://cstheory.stackexchange.com/a/49160/50892
  5 │     def test (a : _) (B : Type) (b : B) (p : a = b) : I => 0
    │                                              ╰╯
    │                                              ╰╯ ?_ <= ?A a B b

Error: Equations do not have solutions!

In file $FILE:5:14 ->

  3 │   
  4 │   // https://cstheory.stackexchange.com/a/49160/50892
  5 │   def test (a : _) (B : Type) (b : B) (p : a = b) : I => 0
    │                 ╰╯

Error: Unsolved meta _

3 error(s), 0 warning(s).
Let's learn from that.

LiteralAmbiguous3:
In file $FILE:6:11 ->

  4 │   
  5 │   def good : List Unit => [ ]
  6 │   def bad => [ unit ]
    │              ╰──────╯

Error: Unable to solve the type of this literal:
         [unit]
       I'm confused about the following candidates:
         `List`, `List2`

1 error(s), 0 warning(s).
Let's learn from that.

NonPattern:
In file $FILE:9:3 ->

  6 │       def ++-assoc-type (xs : Vec n A) (ys : Vec m A) (zs : Vec o A)
  7 │         => Path (fn i => Vec (+-assoc i) A)
  8 │         (xs ++ (ys ++ zs))
    │          ╰──────────────╯ ?a n A m o xs ys zs 0 >= n, ?b n A m o xs ys zs 0 >= m,
                                ?c n A m o xs ys zs 0 >= o
  9 │         ((xs ++ ys) ++ zs)
    │          ╰──────────────╯
    │          ╰──────────────╯ ?a n A m o xs ys zs 1 >= n, ?b n A m o xs ys zs 1 >= m,
                                ?c n A m o xs ys zs 1 >= o

Info: Solving equation(s) with not very general solution(s)

That looks right!

